DEVOPS - https://www.youtube.com/watch?v=-VaVmb_UOC8

What is Artifactory?
======================================
        Repo managment tool
            Binary lib
            Packages
        From JFROG
        Written in - JAVA
        Release
            Community Edition - Free - Open Source
            Professional Edition - PAID 
            Enterrpise Edition  - PAID 
            Cloud Based   - PAID 
        Version
            6.X

Architecture of Artifactory
        WEB LAYER - APACHE
        APP LAYER - TOMCAT
        DB LAYER - ALL RDBMS 
                    DERBY (Default)
                    MYSQL
                    ORACLE
                    MSSQL
                    PG

        FILE STORE
                    FILE SYSTEM (OBJECT STORAGE)
                    file-system (DEFAULT)
                    cache-fs
                    full-db
                    full-db-direct
                    s3
                    google-storage
                    double-shards
                    redundant-shards
                    cluster-file-system
                    cluster-s3
                    cluster-google-storage
                    cluster-azure-blob-storage


                    DATA BASE - Not Recommended
       OBJECT STORAGE - Using
                    SHA1 --> SHA256
        ENCODE - 
                    CHECKSUM | MD5 
    
WHY DO WE NEED IT?
        To Store the artifact
        Standard Process and Directory Layout
        Saving time
        Integrity and Durability the package
        Availability of the packages
        Security
        Enforces for Standard Process
        Maintenance & Cleanup 
        Schedule the maintenance
        Backup
        Mirror
        Agile
        Shorter Release
        Quality
        Time

Where it stands in SDLC?
====================================
Prod - IntelX
Mgr - MgrX
----------------
DevOps
        Every Commit should be going to Prod
        Quality REDEFINED
                ---------
        Cost Reduction
    
Architect ->    JIRA - Confluence
Dev - 10 -
            Code Integ - GITLAB
            Code Ana - 
                    PEER Code - GITLAB
                    Static Code Review - SonarQube
            Build managenent
                    Maven
                    Gradle
                    mSbuild
            Unit test
                    Junit - Nunit
            Packaging managment
                    APP
                        JAR - WAR - EAR - TAR - ZIP - pYP - RB - NUGET
                    SYSTEM
                        EXE
                        RPM
                        APK
                        DMG
                        MSI
====================================================================
====================================================================
Bower
Boost your front end development by hosting your own Bower components and proxying the Bower registry in Artifactory.
Chef
Enhance your capabilities for configuration management with Chef using all the benefits of a repository manager.
CocoaPods
Speed up development with Xcode and CocoaPods with fully fledged CocoaPods repositories.
Conan
Artifactory is the only secure, private repository for C/C++ packages with fine-grained access control.
Conda
Artifactory natively supports Conda repositories for Python, R, Ruby, Lua, Scala, Java, JavaScript, C/ C++, FORTRAN.
CRAN
Deploy and resolve CRAN packages for the R language using dedicated CRAN repositories.
Debian
Host and provision Debian packages complete with GPG signatures.
Docker
Host your own secure private Docker registries and proxy external Docker registries such as Docker Hub.
Git LFS
Optimize your workflow when working with large media files and other binary resources.
Go
Build Go projects while resolving dependencies through Artifactory, and then publish the resulting Go packages into a secure, private Go registry
Helm
Manage your Helm Charts in Artifactory and gain control over deployments to your Kubernetes cluster.
Maven
Artifactory is both a source for Maven artifacts needed for a build, and a target to deploy artifacts generated in the build process.
npm
Host your own node.js packages, and proxy remote npm repositories like npmjs.org through Artifactory.
NuGet
Host and proxy NuGet packages in Artifactory, and pull libraries from Artifactory into your various Visual Studio .NET applications.
Opkg
Optimize your work with OpenWrt using Opkg repositories. Proxy the official OpenWrt repository and cache remote .ipk files.
P2
Proxy and host all your Eclipse plugins via an Artifactory P2 repository, allowing users to have a single-access-point for all Eclipse updates.
PHP Composer
Provision Composer packages from Artifactory to the Composer command line tool, and access Packagist and other remote Composer metadata repositories.
Puppet
Configuration management meets repository management with Puppet repositories in Artifactory.
PyPI
Host and proxy PyPI distributions with full support for pip.
RPM
Distribute RPMs directly from your Artifactory server, acting as fully-featured YUM repository.
RubyGems
Use Artifactory to host your own gems and proxy remote gem repositories like rubygems.org.
SBT
Resolve dependencies from and deploy build output to SBT repositories when running SBT builds.
Vagrant
Securely host your Vagrant boxes in local repositories.
VCS
Consume source files packaged as binaries.    
====================================================================
Maven -> Jars
Git LFS -> files
Docker -> Images
Puppet -> module
Helm -> Charts
NuGet -> Nupkg
RPM -> rpm
====================================================================
            Artifact management tool - Artifactory - Nexus - Archiva
            Deploy 2 QA - INT - PRE Prod
            ----------------------------------
            Ansible - Puppet - Chef
            Octopus Deloy - UDeploy

            AT - --- QTP - Selenium

            Code Coverage - Jacoco - Cobertua - Nocover- BullSeye
==============================================================================================
PLAN -> Code -> ANa -> BUild -> UT -> Dep2Repo -> Dep2QA -> AT ->> CC
--------------------------------------------------------------------------
JIRA - Git -> SonarQube -> MAVEN -> JUNIT -> Artifactory -> Ansible -> Sel -> Jacoco
================================================================================
                        INTG between -TEAM - PROCESS - TEAM
==============================================================================
                            TEAMCITY - JENKNS - 

How to install Artifactory?
        PRE - OpenJDK11
        $ sudo yum install java-11-openjdk-devel

                http://bit.ly/2sShpmo


AMI - RHEL-7.5_HVM_GA-20180322-x86_64-1-Hourly2-GP2 (ami-5b673c34)
=============================================

RAJESH - 13.126.112.161
ec2-user

sudo -s
cd /opt/
yum install unzip
yum install wget
Download url 
https://akamai.bintray.com/9e/9ea5f073600c1fc63d05c2030732ea9b4c41110a7deb1264937bf0052056a091?__gda__=exp=1577080253~hmac=95c4691e0fa67694a62ee13e248a402de0160c6c9485ceaaf5d26712f02191e0&response-content-disposition=attachment%3Bfilename%3D%22jfrog-artifactory-pro-6.16.0.zip%22&response-content-type=application%2Foctet-stream&requestInfo=U2FsdGVkX18qNTR_5TZs8qprlgu3gg3dFLjO5UkjGWPrSeY-iAWD9lPmX8PgqMhDtSUvBj11tOn-LGX51OmkIaPk1_WOMQwCtIpyqOGvzOiXEf_xnapXghdKUBcQLrPfqMdR6x3OMRqefjSBjWcgP76wg7rb4rd50fSbiLaK3u0HBR_GwaY9Bk677b_rE6LvtdEwLwMt7f8Z9I0oosEj3056hEMZGVZupOlZe_kbFYLZ6lmsiqKEWDjFhScX-8pdiluOeXS-mQJmqZw5pF_5eg&response-X-Checksum-Sha1=e1016fda307746136a6cbe9c500e369cdcc2cd2c&response-X-Checksum-Sha2=9ea5f073600c1fc63d05c2030732ea9b4c41110a7deb1264937bf0052056a091
mv XXXX art.zip
unzip art.zip

cd /opt/artifactory-pro-6.16.0/bin
./artifactory.sh
http://13.126.112.161:8081/
admin / password

============How to become Good Arrtifactory Admin?===================
Linux Administration
Tomcat Admin
Apache Admin
MySql Admini
JAVA TRACKING
========================================================
Basic Workflow with Artifactory
============================================================
How to upload Package to Artifactory?
            VIA Maven?
Step 1 - Create a ACCESS [ ADMIN ]
Step 2 - Create a REPO   [ ADMIN ]
Step 3 - Setup a maven   [ ADMIN & USER ]
Step 4 - Goal?


============Artifactory Authentication and Authrization=========================================
Authentication - WHO CAN LOG IN to Artifactory?
                    INTERNAL DB [DEFault]
                    LDAP  
                    Crowd 
                    JIRA  
                    SAML SSO  
                    OAuth SSO  
                    HTTP SSO 
Authrization - WHO CAN DO WHAT?
                    Permissions 
                    Groups 
                    Users 

EXCERCISE - 
1 PERMISION with DEPLOY/CACHE --> GROUP--> USER
1 PERMISION with DELETE --> GROUP--> USER
1 USER with admin
===================================
============Artifactory Repo Types=========================================
Local       - Hosted in Artifactory + R W
Remote      - Cache copy of Another Artifactory Local repo + READ ONLY
Virtual     - Local(S) + Remote(S)
======================================================
=====================================================
MAVEN
        LIFE CYCLE -    DONE
        PHASE           DONE    
        Goal             DONE   
        plugins
        RELEASE Types
        Version
==============================================================
What is Maven?
        Build tool - PROJECT MGMT TOOL.
        ---------------------------------------
        Download Src
        Set a Compiler
        Downlod Dep
        Compile 
        UT
        Pack
        reports
        docs
        ==================
Humen LIFE CYCLE
--------------------------------------
BORN -> KID -> TEEN -> YOUNG  --> MID -> OLD -> DIE (PHASE)

SOFTWARE LIFE CYCLE
============================================
Compile -> UT -> PACK -> Deploy2Artifactory (PHASE)

Maven - 3 LIFECYCLE
default Lifecycle
clean Lifecycle
site Lifecycle
https://maven.apache.org/ref/3.6.3/maven-core/lifecycles.html

 <phase>validate</phase>
  <phase>initialize</phase>
  <phase>generate-sources</phase>
  <phase>process-sources</phase>
  <phase>generate-resources</phase>
  <phase>process-resources</phase>
  <phase>compile</phase>
  <phase>process-classes</phase>
  <phase>generate-test-sources</phase>
  <phase>process-test-sources</phase>
  <phase>generate-test-resources</phase>
  <phase>process-test-resources</phase>
  <phase>test-compile</phase>
  <phase>process-test-classes</phase>
  <phase>test</phase>
  <phase>prepare-package</phase>
  <phase>package</phase>
  <phase>pre-integration-test</phase>
  <phase>integration-test</phase>
  <phase>post-integration-test</phase>
  <phase>verify</phase>
  <phase>install</phase>
  <phase>deploy</phase>

IMPORTANT PHASE OF MAVEN TO MANAGE A PROJECT
==============================================
PHSE                                    GOAL
<phase>compile</phase>              compile
<phase>test</phase>                 test
<phase>package</phase>             package                
<phase>install</phase>              install
<phase>deploy</phase>               deploy

=========================================
mvn compile
mvn test
mvn package
mvn install 
mvn deploy

RELEASE Types in Maven
===============================
    RELEASE     5, 5.4, 5.4.3
    SNAPSHOT    5-SNAPSHOT, 5.4-SNAPSHOT, 5.4.3-SNAPSHOT

MAVEN REPO
        LOCAL REPO - C:\Users\Rajesh Kumar\.m2\repository
        CENTRAL REPO - http://repo.maven.apache.org/maven2/
        PRIVATE REPO 
=============================
POM.XMl
        Contains Project info and dependencies
        maven repo
SETTING.XMl
        Contains maven setting.
                    maven repo access
                    maven proxy

        
                
===============================================================
Maven Repo
        Host
                RELEASE
                SNAPSHOT
        Remote
        Virtual
====================================================
How to UPLOAD?      VIA MAVEN
-------------------------------'
Step 1 - Install JDK and Set JAVA_HOME
Step 2 - Install Maven and Set C:\tools\maven\bin path in PATH.
Step 3 - Create intelx and intely project
Step 4 - Modify pom.xml with Repo location
https://github.com/devops-school/helloworld-java-maven
Step 5 - Modify Setting.xml(C:\tools\maven\conf) wtIh Access - 
https://github.com/devops-school/helloworld-java-maven
Step 6 - mvn deploy

PROJECT 1 - intelx
mvn archetype:generate
-DgroupId=com.intel.software
-DartifactId=intelx
-DarchetypeArtifactId=maven-archetype-quickstart
-DinteractiveMode=false

mvn archetype:generate -DgroupId=com.intel.software -DartifactId=intelx -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false


PROJECT 2 - intely
mvn archetype:generate
-DgroupId=com.intel.software
-DartifactId=intely
-DarchetypeArtifactId=maven-archetype-quickstart
-DinteractiveMode=false

mvn archetype:generate -DgroupId=com.intel.software -DartifactId=intely -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false

How to Download?    VIA MAVEN









Upgrade from 5.X to 6.X
=============================

EXPECTATIONS
=======================================
Docker 
HA Installation and Setup
Log Analsys
Artifact storage
Clean up policies

How to enforce Specific java in maven
https://www.mkyong.com/maven/how-to-tell-maven-to-use-java-8/
====================================================================================
Working with Gradle Repo
===========================
Step 1  - Install JDK
Step 2 -  Install Gradle - Unzip - and Set GRADLE_HOME/bin to PATH
Step 3 - 
FILE  - build.gradle
        gradle.properties -   
        https://github.com/devopsschool-sample-projects/artifactory-gradle-example    
Step 4  - craete a gradle repo
Step 5  - Modify build.gradle and gradle.properties accordingly
Step 6 - gradle tasks...


Working with Docker Repo 
===================================
Step 1 - Install Docker
https://www.devopsschool.com/tutorial/docker/install-config/docker-install-commuityedition-centos-rhel.html
Step 2 - Create Docker Image
Step 3 - Create a repo on Artifactory
Step 4 - SEPC
# Not using HTTPS requires Docker clients to add an --insecure-registry flag to DOCKER_OPTS
export DOCKER_OPTS='--insecure-registry 13.235.238.10:8081'
# docker pull / push 13.235.238.10:8081/<REPOSITORY_KEY>/<IMAGE>:<TAG>
# docker login -u <USER_NAME> -p <USER_PASSWORD> 13.235.238.10:8081
Step 5 - docker login -u admin -p password 13.235.238.10:8081
Step 6 - docker push 13.235.238.10:8081/intel/ub-git
Step 7 - 

NOTES
https://github.com/Juniper/contrail-docker/wiki/Configure-docker-service-to-use-insecure-registry
   {
        "insecure-registries" : ["13.235.238.10:8081"]
    }
 89  sudo yum install -y yum-utils device-mapper-persistent-data lvm2
   90  sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
   91  sudo yum install –y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
   92  sudo yum-config-manager --enable rhui-REGION-rhel-server-extras
   93  sudo yum install -y docker-ce
   94  sudo systemctl enable docker
   95  sudo systemctl start docker\
   96  sudo systemctl start docker
   97  docker version
   98  clear
   99  ls
  100  vi Dockerfile
  101  docker images
  102  docker build -t ub-git .
  103  vi Dockerfile
  104  docker build -t ub-git .
  105  docker images
  106  docker login
  107  clear
  108  docker login -u admin -p password 13.235.238.10:8081
  109  export DOCKER_OPTS="--insecure-registry"
  110  docker login -u admin -p password 13.235.238.10:8081
  111  export DOCKER_OPTS='--insecure-registry 13.235.238.10:8081'
  112  docker login -u admin -p password 13.235.238.10:8081
  113  systemctl stop docker
  114  systemctl start docker
  115  docker login -u admin -p password 13.235.238.10:8081
  116  vi  /etc/docker/daemon.json
  117  systemctl stop docker
  118  systemctl start docker
  119  docker login -u admin -p password 13.235.238.10:8081
  120  clear
  121  ls
  122  clear
  123  os
  124  docker login -u admin -p password 13.235.238.10:8081
  125  docker images
  126  docker push 13.235.238.10:8081/intel/ub-git
  127  docker tag ub-git 13.235.238.10:8081/intel/ub-git
  128  docker images
  129  docker push 13.235.238.10:8081/intel/ub-git
  130  history

========13.233.208.219===============================================================================
https://www.jfrog.com/confluence/display/RTF/MySQL#MySQL-CreatingtheArtifactoryMySQLDatabase

Artifactory with MYSQL
Step 1 - Download artifactory

Step 2 - Setup a mysql server and get a database/user id n password
How to Install MySQL on CentOS 7
https://www.devopsschool.com/tutorial/mysql/how-to-install-mysql-on-centos-7.html

Setting, Changing And Resetting MySQL Root Passwords
https://www.devopsschool.com/tutorial/mysql/setting-changing-and-resetting-mysql-root-passwords.html

Connect to a MySQL database remotely
https://www.devopsschool.com/tutorial/mysql/connect-to-a-mysql-database-remotely.html

Step 3 - Modify artifactory config file

Step 4 - Copy a db dribver for mysql

Step 5 - start a artifactory



mysql performance tuning best practices
mysql security tuning best practices

=======================================================================================
=======================================================================================
BACKUP of SYSTEM
        USING Artifactory
        Manual
                - TAKE A CRUDE BACKUP OF DB
                - TAKE A CRUDE BACKUP OF FILESTORE
                - ALL CONFIG
        ====================================
        CONFIG FILE of Artifactory
        DATABASE - META
        FILESTORE

BACKUP OF REPO
        USING Artifactory
========================================================
JAVA PS troubleshooting
https://docs.oracle.com/javase/7/docs/technotes/tools/share/jstack.html

13.235.238.10

===================================================
REPLICATION
============================
http://13.235.238.10:8081/

http://13.233.208.219:8081/artifactory/webapp/

===========================================================
Troubleshooting
==============================
https://www.devopsschool.com/blog/if-a-linux-build-server-suddenly-starts-getting-slow-what-would-you-check/


System Level troubleshooting

        a. RAM related issues

        b. Disk Space related Issues

        c. Disk I/O read write issues

        d. Network Hardware issues

        e. Mount issues

        f. Too Many process running in the machine

Application Level troubleshooting
a. Application is not behaving properly. Hit to Application log file OR application server log file OR web server Log file and try to understand the issues.

b. zombie process issues – Find out if any as such process which is causing the system performance issues.

c. Application Log – depends on the application installed, this can be referred and make use of the experience with the project and troubleshoot.

d. Web Server Log – we can check http, tomcat log as well.

e. Application Server Log – We can see jboss, weblogic logs to see if the application server response/receive time is the issues for slowness.

f. Memory Leak of any application – This is one of well known issues in lunux based server due to bad application coding. Many times this can be resolved either by fixing the code or rebooting. But many other solutions are there to apply.

 Dependent Services troubleshooting

a. SMTP Response time – SMTP server is not responding faster which is causing delay in response and queue up many processes.

b. Network issues – There are many System performance issues is dependent on network or service which is depends on the network.

c. Firewall related issues

d. Antivirus related issues
=========================================================================================
SHARDING and REPLICAS
=====================================
https://www.jfrog.com/confluence/display/RTF/HA+Installation+and+Setup


QA
How to do NFS sharding in Artifactory?

How to setup NFS?
https://www.devopsschool.com/blog/setup-nfs-server-and-use-inside-a-kubernetes-pods-in-rhel-centos7/

==================MASTER Node 1====================================
1. Setup a MYSQL - Create database
2. Setup NFS server (RW)
3. setup db.properties as per mysql
4. Setup binarystore.xml with NFS
5. copy database connector to tomcat Directory
6. ----- setup ha-node.properties with 
node.id=art1
context.url=http://13.233.208.219:8081/artifactory
membership.port=10001
primary=true
artifactory.ha.data.dir=/tmp/mylocal/ha-data
artifactory.ha.backup.dir=/tmp/mylocal/ha-backup
7. Start a Artifactory

13.233.208.219

==================slave Node 1====================================
13.126.85.32
1. Setup a MYSQL - Create database
2. Setup NFS server (RW)
3. setup db.properties as per mysql
4. Setup binarystore.xml with NFS
5. copy database connector to tomcat Directory
6. ----- setup ha-node.properties with 
node.id=art2
context.url=http://13.233.208.220:8081/artifactory
membership.port=10001
primary=false
artifactory.ha.data.dir=/tmp/mylocal/ha-data
artifactory.ha.backup.dir=/tmp/mylocal/ha-backup
7. Start a Artifactory

===============================Setup loadbalancer with ART 1 and ART 2

How to setup Docker repository in Artifactory and push/pull images?
https://www.devopsschool.com/blog/how-to-setup-docker-repository-in-artifactory-and-push-pull-images/

Setup Artifactory pro 6.1.0 using Docker containtainer
https://www.devopsschool.com/blog/setup-artifactory-pro-6-1-0-using-docker-containtainer/

How to setup Docker Registry/Repository using Jfrog Artifactory
https://www.devopsschool.com/blog/how-to-setup-docker-registry-repository-using-jfrog-artifactory/

Artifactory Install and Configurations Guide
https://www.devopsschool.com/blog/artifactory-install-and-configurations-guide/

Upgrade Artifactory from Open-Source (OSS) to PRO?
https://www.devopsschool.com/blog/upgrade-artifactory-from-open-source-oss-to-pro/

What is difference between artifactory and bintray?
https://www.devopsschool.com/tutorial/artifactory/difference-between-artifactory-and-bintray.html

Artifactory Terminology and Navigation
https://www.devopsschool.com/tutorial/artifactory/artifactory-terminology-and-navigation.html

Artifactory Install and Configuration
https://www.devopsschool.com/tutorial/artifactory/artifactory-install-and-configuration.html
=================================================
http://rajeshkumar.xyz/

SHA1 to SHA256 
https://www.jfrog.com/confluence/display/RTF/Checksum-Based+Storage

=====================================================
Step 1- Install Jenkins

Step 2- Install Artifactory

Step 3 - Install ARTIFACTORY plusgin in Jenkins

Step 4 - Config artifacvtory plugins in Jenkins

Step 5 - Upload from Jenkins 

Ste6 - WATCH IT BUILD 

YOUTUBE - DEVOPSSCHOOL
